<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Eric Zhong</title>
 <link href="http://jiangle.name/atom.xml" rel="self"/>
 <link href="http://jiangle.name"/>
 <updated>2013-11-03T21:13:45+08:00</updated>
 <id>http://jiangle.name</id>
 <author>
   <name>Eric Zhong</name>
   <email>smartynaoki@gmail.com</email>
 </author>

 
 <entry>
   <title>WSGI</title>
   <link href="http://jiangle.name/2013/10/22/wsgi"/>
   <updated>2013-10-22T00:00:00+08:00</updated>
   <id>hhttp://jiangle.name/2013/10/22/wsgi</id>
   <content type="html">&lt;h2&gt;What is WSGI&lt;/h2&gt;

&lt;p&gt;WSGI is the Web Server Gateway Interface. It is a specification for web servers and application servers to communicate with web applications (though it can also be used for more than that). It is a Python standard, described in detail in PEP 333.&lt;/p&gt;

&lt;p&gt;WSGI Performance Estimates&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Mechanism     Requests/sec
mod_cgi ( ScriptAlias )     10
mod_python ( PythonHandler )     400
mod_wsgi ( WSGIDaemonProcess )     700
mod_wsgi ( .htaccess/SetHandler )     850
mod_wsgi ( WSGIScriptAlias )     900
static ( DocumentRoot )     1000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Apache&lt;/h2&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://localhost/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;性能&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ab -n1000 -c100 http://localhost/index.html   # 14000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;mod_wsgi (WSGIScriptAlias)&lt;/h2&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libapache2-mod-wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;新增文件：&lt;code&gt;/etc/apache2/mods-available/{wsgi.load,wsgi.conf}&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;配置&lt;code&gt;/etc/apache2/httpd.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoadModule wsgi_module modules/mod_wsgi.so

WSGIScriptAlias /myapp /var/www/wsgi-scripts/myapp.wsgi

&amp;lt;Directory /var/www/wsgi-scripts&amp;gt;
Order allow,deny
Allow from all
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p /var/www/wsgi-scripts
sudo vim /var/www/wsgi-scripts/myapp.wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑&lt;code&gt;myapp.wsgi&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def application(environ, start_response):
    status = &#39;200 OK&#39;
    output = &#39;mod_wsgi works!&#39;

    response_headers = [(&#39;Content-type&#39;, &#39;text/plain&#39;)，(&#39;Content-Length&#39;, str(len(output)))]
    start_response(status, response_headers)

    return [output]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;变更生效&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service apache2 reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://localhost/myapp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;性能&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ab -n1000 -c100 http://localhost/myapp/    # 11000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;mod_wsgi (WSGIDaemonProcess)&lt;/h2&gt;

&lt;p&gt;By default any WSGI application will run in what is called embedded mode. That is, the application will be hosted within the Apache worker processes used to handle normal static file requests.&lt;/p&gt;

&lt;p&gt;In daemon mode a set of processes is created for hosting a WSGI application, with any requests for that WSGI application automatically being routed to those processes for handling.&lt;/p&gt;

&lt;p&gt;修改配置&lt;code&gt;/etc/apache2/httpd.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoadModule wsgi_module modules/mod_wsgi.so

WSGIDaemonProcess example.com processes=2 threads=15 display-name=%{GROUP}
WSGIProcessGroup example.com

WSGIScriptAlias /myapp /var/www/wsgi-scripts/myapp.wsgi

&amp;lt;Directory /var/www/wsgi-scripts&amp;gt;
Order allow,deny
Allow from all
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;性能&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ab -n1000 -c100 http://localhost/myapp/    # 7000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;文档&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/modwsgi/&quot;&gt;https://code.google.com/p/modwsgi/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SSH密钥登入</title>
   <link href="http://jiangle.name/2013/10/18/ssh-with-key"/>
   <updated>2013-10-18T00:00:00+08:00</updated>
   <id>hhttp://jiangle.name/2013/10/18/ssh-with-key</id>
   <content type="html">&lt;h2&gt;在客户端建立公钥和私钥&lt;/h2&gt;

&lt;p&gt;在&lt;code&gt;~/.ssh&lt;/code&gt;下生成公钥&lt;code&gt;id_rsa.pub&lt;/code&gt;和私钥&lt;code&gt;id_rsa&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa       # 一路回车
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;配置ssh服务器&lt;/h2&gt;

&lt;p&gt;修改&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 禁止root登录
PermitRootLogin no

# 防止客户端`~/.ssh`目录权限配置不对
StrictModes no

# 使用成对密钥鉴权
RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile    .ssh/authorized_keys

# 禁止密码登录
PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;将公钥放至ssh服务器&lt;/h2&gt;

&lt;p&gt;复制公钥到服务器&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ~/.ssh/id_rsa.pub &amp;lt;USER&amp;gt;@&amp;lt;IP&amp;gt;:~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;登录ssh服务器,添加公钥&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启服务后配置生效&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/sshd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;客户端访问&lt;/h2&gt;

&lt;p&gt;默认使用私钥&lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh &amp;lt;USER&amp;gt;@&amp;lt;IP&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以指定私钥&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -i ~/.ssh/id_rsa &amp;lt;USER&amp;gt;@&amp;lt;IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Python库</title>
   <link href="http://jiangle.name/2013/09/28/python-lib"/>
   <updated>2013-09-28T00:00:00+08:00</updated>
   <id>hhttp://jiangle.name/2013/09/28/python-lib</id>
   <content type="html">&lt;h2&gt;VirtualEnv&lt;/h2&gt;

&lt;p&gt;Install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo pip install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Init Dir&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd DIR
virtualenv .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Activate Env&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source bin/activate
which python
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;PrettyTable&lt;/h2&gt;

&lt;p&gt;Install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install prettytable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/python

from prettytable import PrettyTable

x = PrettyTable([&quot;City name&quot;, &quot;Area&quot;, &quot;Population&quot;, &quot;Annual Rainfall&quot;])
x.align[&quot;City name&quot;] = &quot;l&quot; # Left align city names
x.padding_width = 1 # One space between column edges and contents (default)
x.add_row([&quot;Adelaide&quot;,1295, 1158259, 600.5])
x.add_row([&quot;Brisbane&quot;,5905, 1857594, 1146.4])
x.add_row([&quot;Darwin&quot;, 112, 120900, 1714.7])
x.add_row([&quot;Hobart&quot;, 1357, 205556, 619.5])
x.add_row([&quot;Sydney&quot;, 2058, 4336374, 1214.8])
x.add_row([&quot;Melbourne&quot;, 1566, 3806092, 646.9])
x.add_row([&quot;Perth&quot;, 5386, 1554769, 869.4])
print x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-----------+------+------------+-----------------+
| City name | Area | Population | Annual Rainfall |
+-----------+------+------------+-----------------+
| Adelaide  | 1295 |  1158259   |      600.5      |
| Brisbane  | 5905 |  1857594   |      1146.4     |
| Darwin    | 112  |   120900   |      1714.7     |
| Hobart    | 1357 |   205556   |      619.5      |
| Sydney    | 2058 |  4336374   |      1214.8     |
| Melbourne | 1566 |  3806092   |      646.9      |
| Perth     | 5386 |  1554769   |      869.4      |
+-----------+------+------------+-----------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;ArgParse&lt;/h2&gt;

&lt;h3&gt;术语&lt;/h3&gt;

&lt;p&gt;以&lt;code&gt;PROG [-h] [--foo FOO] [bar [bar …]]&lt;/code&gt;为例&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;option&lt;/code&gt; - &#39;--foo&#39;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attribute&lt;/code&gt; - &#39;foo&#39;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;optional arguments&lt;/code&gt; - &#39;FOO&#39;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;position arguments&lt;/code&gt; - &#39;bar&#39;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;ArgumentParser()&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;class argparse.ArgumentParser(prog=None, usage=None, description=None, epilog=None, parents=[], 
                                formatter_class=argparse.HelpFormatter, prefix_chars=&#39;-&#39;, fromfile_prefix_chars=None,
                                argument_default=None, conflict_handler=&#39;error&#39;, add_help=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;prog&lt;/code&gt; - 指定程序名称 (default: sys.argv[0])&lt;/li&gt;
&lt;li&gt;&lt;code&gt;usage&lt;/code&gt; - 指定Usage字符串 (default: 参数清单)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt; - argument help之前的一段描述文字 (default: none)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epilog&lt;/code&gt; - argument help之后的一段描述文字 (default: none)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parents&lt;/code&gt; - 继承其它ArgumentParser对象的选项，可以多个（List）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;formatter_class&lt;/code&gt; - 定制Help输出（通过几个可选的内置方法）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefix_chars&lt;/code&gt; - 自定义optional arguments的前缀，可多个 (default: ‘-‘)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fromfile_prefix_chars&lt;/code&gt; - 当从指定文件读取参数，指定文件名时加的前缀 (default: None)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;argument_default&lt;/code&gt; - 全局默认参数 (default: None)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conflict_handler&lt;/code&gt; - 是否解决重复定义冲突，可用于覆盖前面的定义 (usually unnecessary)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_help&lt;/code&gt; - 是否显示“-h, --help  show this help message and exit” (default: True)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;add_argument()&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ArgumentParser.add_argument(name or flags...[, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name or flags&lt;/code&gt; - 多个选项(-f, --foo)或者一个positional argument（多个写成List）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;action&lt;/code&gt; - 对command-line arguments的处理

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;store&lt;/code&gt; - （默认）保存参数值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store_const&lt;/code&gt; - 配合&lt;code&gt;const&lt;/code&gt;参数使用，保存&lt;code&gt;const&lt;/code&gt;指定的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store_true&lt;/code&gt; or &lt;code&gt;store_false&lt;/code&gt; - 当给出选项时保存为&lt;code&gt;true&lt;/code&gt;or&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;append&lt;/code&gt; - 将同一个选项的多个参数保存到一个List里面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;append_const&lt;/code&gt; - 同上，不过使用&lt;code&gt;const&lt;/code&gt;参数指定的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count&lt;/code&gt; - 计算选项重复次数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt; - ？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt; - 配合&lt;code&gt;version&lt;/code&gt;参数自定义&lt;code&gt;--version&lt;/code&gt;的输出&lt;/li&gt;
&lt;li&gt;自定义&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nargs&lt;/code&gt; - 可接受的参数数量

&lt;ul&gt;
&lt;li&gt;整数 - &lt;code&gt;nargs=2&lt;/code&gt;表示可接受两个，比如&lt;code&gt;--foo a b&lt;/code&gt; =&gt; &lt;code&gt;foo=[&#39;a&#39;, &#39;b&#39;]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt; - 表示只接受一个参数，可配合&lt;code&gt;default&lt;/code&gt;参数（没有给出该选项）和&lt;code&gt;const&lt;/code&gt;参数（仅有该选项，但没有参数）使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; - 将所有参数都整合到List里面，比如&lt;code&gt;a b --foo x y --bar 1 2&lt;/code&gt; =&gt; &lt;code&gt;bar=[&#39;1&#39;, &#39;2&#39;], baz=[&#39;a&#39;, &#39;b&#39;], foo=[&#39;x&#39;, &#39;y&#39;]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; - 同&lt;code&gt;*&lt;/code&gt;，但必须至少给出一个参数，否则会报错&lt;/li&gt;
&lt;li&gt;&lt;code&gt;argparse.REMAINDER&lt;/code&gt; - 将剩下的所有参数和选项都整合到一个List里面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt; - 配合&lt;code&gt;action&lt;/code&gt;和&lt;code&gt;nargs&lt;/code&gt;使用（可用max,sum等内置函数）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; - 配合其它使用，当没有给出某选项时从&lt;code&gt;default&lt;/code&gt;取值（可用max,sum等内置函数）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt; - 指定参数类型，读取后内部会做转换处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;choices&lt;/code&gt; - 只能从一组指定值中选择参数，否则会报错&lt;/li&gt;
&lt;li&gt;&lt;code&gt;required&lt;/code&gt; - 该参数必须有，否则报错&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt; - 指定参数的help信息，也可禁止输出help信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metavar&lt;/code&gt; - 指定属性的显示名称，内部值仍然由&lt;code&gt;dest&lt;/code&gt;指定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dest&lt;/code&gt;- 指定属性的内部名称；默认是使用第一个长选项(&lt;code&gt;--&lt;/code&gt;)，如果全部都是短选项（&lt;code&gt;-&lt;/code&gt;），使用第一个&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;parse_args()&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ArgumentParser.parse_args(args=None, namespace=None)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认从&lt;code&gt;sys.argv&lt;/code&gt;读取参数，创建一个空的&lt;code&gt;Namespace&lt;/code&gt;对象存储属性&lt;/p&gt;

&lt;h3&gt;Ohter&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;子命令

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.add_subparsers()&lt;/code&gt; - 适用于有子命令的程序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;参数分组

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.add_argument_group(title=None, description=None)&lt;/code&gt; - 将选项分组显示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;互斥选项

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;argparse.add_mutually_exclusive_group(required=False)&lt;/code&gt; - 互斥组中的选项不得同时出现，否则报错&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;默认参数

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.set_defaults(**kwargs)&lt;/code&gt; - 设置选项默认值，适用于某些不需要检查的选项；优先级高于&lt;code&gt;default&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.get_default(dest)&lt;/code&gt; - 获取选项默认值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Printing Help

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.print_usage(file=None)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.print_help(file=None)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.format_usage()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.format_help()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局部分析

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.parse_known_args(args=None, namespace=None)&lt;/code&gt; - 分析剩下的没有定义的参数和选项被一起放到一个List中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;自定义文件分析

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.convert_arg_line_to_args(arg_line)&lt;/code&gt; - 实现该方法，从自定义文件读取选项和参数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;退出

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.exit(status=0, message=None)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ArgumentParser.error(message)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从老的&lt;code&gt;optparse&lt;/code&gt;升级到新的&lt;code&gt;argparse&lt;/code&gt;（见官方文档）&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Git</title>
   <link href="http://jiangle.name/2013/09/27/git"/>
   <updated>2013-09-27T00:00:00+08:00</updated>
   <id>hhttp://jiangle.name/2013/09/27/git</id>
   <content type="html">&lt;h2&gt;创建&lt;/h2&gt;

&lt;p&gt;初始化当前工作目录为Git仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd project_dir
git init
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;仓库&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone REPO          # 本地仓库名与远程相同
git clone REPO DIR      # 指定本地仓库名

git pull = git fetch + git merge
git pull . BRANCH       # 将指定分支合并到的当前分支

git fetch REPO master:test    # 将远程仓库的master分支抓到本地test分支（下载objects和refs）
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;配置&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name &quot;xxx&quot;
git config --global user.email &quot;xxx@xxx.com&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;分支&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git branch          # 创建分支
git branch -b       # 创建并切换到分支
git branch BRANCH TAG   # 基于TAG创建分支

git checkout        # 切换分支

git branch -d       # 删除已经合并到主干的分支
git branch -D       # （慎用）强制删除分支

git merge BRANCH    # 将BRANCH合并到当前分支
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;日志&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git show ID/TAG/Commit
git log TAG1..TAG2
git log TAG1..
git log --since=&quot;2 weeks ago&quot;
git log BRANCH1..BRANCH2        # 不在分支1，但在分支2的日志
git log -p                          # 显示代码变更
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;比较&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git whatchanged -p master..BRANCH       # 分支的区别
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;提交&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git add             # 1、新建blob记录最新修改；2、index file添加blob链接
git commit -m &quot;xxx&quot;

git commit -a = git add + git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;TAG&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git tag TAG ID      # 给commit ID一个别名
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;搜索&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git grep &quot;xxx&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;对象&lt;/h2&gt;

&lt;p&gt;对象类型&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog        # 文件
tree        # 目录
commit      # 提交
tag         # 别名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git cat-file -t ID      # 查看类型
git cat-file TYPE ID    # 查看内容
git ls-tree ID          # 查看目录内容
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;commit -&amp;gt; tree 
tree 包含 blob/tree
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;撤销&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git reset - FILE        # 从index file中撤销文件
git checkout - FILE     # 撤销对文件的修改（包括找回删除文件）
git checkout */Dir/File # 恢复已删除或修改的文件
git reset
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;working tree, index file, repo&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git add             # working tree -&amp;gt; index file
git commit          # index file -&amp;gt; repo
git commit -a       # working tree -&amp;gt; index file &amp;amp; repo

git diff            # index file -&amp;gt; working tree
git diff --cached    # repo -&amp;gt; index file
git diff HEAD       # repo -&amp;gt; working tree

reset --soft         # 仅撤销commit
reset --mixed        # （默认）撤销commit和index file，保留working tree
reset --hard         # 撤销全部（commit，index file，working tree）
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;分支表达式&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;HEAD            # 当前分支的最新提交
HEAD^           # 父母
HEAD^^          # 父母的父母
HEAD~4          # 上溯4代
HEAD^1          # 第1个父母
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>OpenStack源码安装</title>
   <link href="http://jiangle.name/2013/09/04/install-openstack-from-source"/>
   <updated>2013-09-04T00:00:00+08:00</updated>
   <id>hhttp://jiangle.name/2013/09/04/install-openstack-from-source</id>
   <content type="html">&lt;h1&gt;声明&lt;/h1&gt;

&lt;h1&gt;安装&lt;/h1&gt;

&lt;h2&gt;准备实验环境&lt;/h2&gt;

&lt;p&gt;本文使用&lt;code&gt;Vagrant&lt;/code&gt;虚拟机（VirtualBox的一个前端），安装&lt;code&gt;Ubuntu 12.04（64-bit）&lt;/code&gt;作为实验环境&lt;/p&gt;

&lt;p&gt;先在Host机上安装好&lt;code&gt;VirtualBox&lt;/code&gt;和&lt;code&gt;Vagrant&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;下载虚机映象&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant box add precise64 http://files.vagrantup.com/precise64.box
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建配置文件（自定义工作目录：openstack）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/openstack
cd openstack
vagrant init precise64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;增加如下内容到新生成的配置文件（Host机通过&lt;code&gt;8080&lt;/code&gt;端口访问虚机的80端口；2G虚拟内存）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config.vm.network :forwarded_port, guest: 80, host: 8080
config.vm.provider :virtualbox do |vb|
    vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, &quot;2048&quot;]
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动虚机并SSH登陆&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant up
vagrant ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;国内用户可以换更快的源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo su
cat &amp;gt; /etc/apt/sources.list &amp;lt;&amp;lt; EOF
deb http://mirrors.163.com/ubuntu/ precise main universe restricted multiverse
deb-src http://mirrors.163.com/ubuntu/ precise main universe restricted multiverse
deb http://mirrors.163.com/ubuntu/ precise-security universe main multiverse restricted
deb-src http://mirrors.163.com/ubuntu/ precise-security universe main multiverse restricted
deb http://mirrors.163.com/ubuntu/ precise-updates universe main multiverse restricted
deb http://mirrors.163.com/ubuntu/ precise-proposed universe main multiverse restricted
deb-src http://mirrors.163.com/ubuntu/ precise-proposed universe main multiverse restricted
deb http://mirrors.163.com/ubuntu/ precise-backports universe main multiverse restricted
deb-src http://mirrors.163.com/ubuntu/ precise-backports universe main multiverse restricted
deb-src http://mirrors.163.com/ubuntu/ precise-updates universe main multiverse restricted
EOF

apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装一些基本工具&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install vim build-essential git python-dev python-setuptools python-pip libxml2-dev libxslt-dev curl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;附：当工作未完成且需要关机时，先“保存状态后关闭”，以后再“从保存状态启动”&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant suspend
vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;安装数据库&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mysql-server mysql-client python-mysqldb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;终端弹出界面，提示输入数据库的root用户密码（例如：&lt;code&gt;111111&lt;/code&gt;）&lt;/p&gt;

&lt;h2&gt;安装Keystone&lt;/h2&gt;

&lt;p&gt;创建keystone数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
create database keystone;
quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# commit 8ba9898f4271ed61b3080ec479b43e6fc1984345
git clone git://github.com/openstack/keystone.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装依赖&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd keystone
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装keystone到系统&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;复制配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /etc/keystone
cp etc/* /etc/keystone/

cd /etc/keystone
cp keystone.conf.sample keystone.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;/etc/keystone/keystone.conf&lt;/code&gt; (使用&lt;code&gt;openssl rand -hex 10&lt;/code&gt;生成&lt;code&gt;token：fa9a647b8de836869722&lt;/code&gt;随机串)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DEFAULT]
admin_token = fa9a647b8de836869722
public_port = 5000
admin_port = 35357
public_endpoint = http://localhost:%(public_port)s/v2.0
admin_endpoint = http://localhost:%(admin_port)s/v2.0

[sql]
# connection = sqlite:///keystone.db
connection = mysql://root:111111@localhost/keystone

[catalog]
driver = keystone.catalog.backends.sql.Catalog
# driver = keystone.catalog.backends.templated.TemplatedCatalog
# template_file = default_catalog.templates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初始化数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone-manage db_sync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初始化证书 （参数意义：&lt;code&gt;chmod root:root&lt;/code&gt;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone-manage pki_setup --keystone-user=root --keystone-group=root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动keystone服务(加上&lt;code&gt;-d&lt;/code&gt;参数可查看debug信息)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone-all &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置环境变量（目前还没有账户，只能先使用&lt;code&gt;admin_token&lt;/code&gt;方式验证）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export SERVICE_TOKEN=fa9a647b8de836869722
export SERVICE_ENDPOINT=http://localhost:35357/v2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建类型为&lt;code&gt;identity&lt;/code&gt;的&lt;code&gt;service&lt;/code&gt;和相应的&lt;code&gt;endpoint&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone service-create --name=keystone --type=identity \
--description=&quot;Keystone Identity Service&quot;
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |    Keystone Identity Service     |
|      id     | 714af530900840ef88106765f13f1921 |
|     name    |             keystone             |
|     type    |             identity             |
+-------------+----------------------------------+

keystone endpoint-create --service_id 714af530900840ef88106765f13f1921 \
--publicurl &#39;http://127.0.0.1:5000/v2.0&#39; \
--adminurl &#39;http://127.0.0.1:35357/v2.0&#39; \
--internalurl &#39;http://127.0.0.1:5000/v2.0&#39;

keystone endpoint-list
+----------------------------------+-----------+----------------------------+----------------------------+-----------------------------+----------------------------------+
|                id                |   region  |         publicurl          |        internalurl         |           adminurl          |            service_id            |
+----------------------------------+-----------+----------------------------+----------------------------+-----------------------------+----------------------------------+
| d28d840d4be74a778578953a1a13324f | regionOne | http://127.0.0.1:5000/v2.0 | http://127.0.0.1:5000/v2.0 | http://127.0.0.1:35357/v2.0 | 714af530900840ef88106765f13f1921 |
+----------------------------------+-----------+----------------------------+----------------------------+-----------------------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;创建管理员（admin）账户&lt;/h3&gt;

&lt;p&gt;创建用户、角色、租户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone user-create --name admin --pass 123456
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|  email   |                                  |
| enabled  |               True               |
|    id    | 94d416d8ebf34d3e97e345afcc5a2283 |
|   name   |              admin               |
| tenantId |                                  |
+----------+----------------------------------+

keystone role-create --name admin
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|    id    | de5cdd28a71f4df2943ac617ed20695c |
|   name   |              admin               |
+----------+----------------------------------+

keystone tenant-create --name admin
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |                                  |
|   enabled   |               True               |
|      id     | 40c76f9aa1c44907aa1a68b9cd7e8034 |
|     name    |              admin               |
+-------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将admin用户设置为admin角色和admin租户的成员 （参数为上面动态生成的ID）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone user-role-add --user 94d416d8ebf34d3e97e345afcc5a2283 \
--role de5cdd28a71f4df2943ac617ed20695c \
--tenant_id 40c76f9aa1c44907aa1a68b9cd7e8034
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为admin用户创建快速设置环境变量的脚本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; ~/keystonerc_admin &amp;lt;&amp;lt; EOF
export OS_USERNAME=admin
export OS_TENANT_NAME=admin
export OS_PASSWORD=123456
export OS_AUTH_URL=http://127.0.0.1:35357/v2.0/
export PS1=&quot;[\u@\h \W(keystone_admin)]\$ &quot;
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不再使用&lt;code&gt;admin_token&lt;/code&gt;的验证方式，清除环境变量&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unset SERVICE_TOKEN
unset SERVICE_ENDPOINT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用admin用户测试一下 (如果keystone用&lt;code&gt;-d&lt;/code&gt;参数启动，还能看到debug信息)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;. ~/keystonerc_admin

keystone user-list
+----------------------------------+-------+---------+-------+
|                id                |  name | enabled | email |
+----------------------------------+-------+---------+-------+
| 94d416d8ebf34d3e97e345afcc5a2283 | admin |   True  |       |
+----------------------------------+-------+---------+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;创建用户账户 (可选)&lt;/h3&gt;

&lt;p&gt;创建用户、角色、租户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone user-create --name joe --pass 123123
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|  email   |                                  |
| enabled  |               True               |
|    id    | 770def1aa63847bb8a5d31e1df2004d5 |
|   name   |               joe                |
| tenantId |                                  |
+----------+----------------------------------+

keystone role-create --name user
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|    id    | 430f055d142649d1b02e685025b07a5b |
|   name   |               user               |
+----------+----------------------------------+

keystone tenant-create --name trial
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |                                  |
|   enabled   |               True               |
|      id     | 249d66d789d643fabc544f6d6fc9ed9f |
|     name    |              trial               |
+-------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将用户joe设置为user角色和租户trial的成员&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone user-role-add --user 770def1aa63847bb8a5d31e1df2004d5 \
--role 430f055d142649d1b02e685025b07a5b \
--tenant_id 249d66d789d643fabc544f6d6fc9ed9f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为用户joe创建环境变量快速设置脚本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; ~/keystonerc_joe &amp;lt;&amp;lt; EOF
export OS_USERNAME=joe
export OS_TENANT_NAME=trial
export OS_PASSWORD=123123
export OS_AUTH_URL=http://127.0.0.1:5000/v2.0/
export PS1=&quot;[\u@\h \W(keystone_joe)]\$ &quot;
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试一下（&lt;code&gt;keystone user-list&lt;/code&gt;只有管理员才有权限调用，应该会报错，但是&lt;code&gt;keystone token-get&lt;/code&gt;可以返回信息）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;. ~/keystonerc_joe

$ keystone user-list
2013-09-08 14:10:14.312 10936 WARNING keystone.common.wsgi [-] You are not authorized to perform the requested action, admin_required.
You are not authorized to perform the requested action, admin_required. (HTTP 403)

keystone token-get
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;安装Swift&lt;/h2&gt;

&lt;p&gt;获取源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# commit 5964082b2cd7aa2db6bcd112a5d33939e0f68bd9
git clone git://github.com/openstack/swift.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装依赖&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd swift
pip install -r requirements.txt
apt-get install memcached
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;pip安装依赖时可能报错&lt;code&gt;error: ffi.h: No such file or directory&lt;/code&gt;，见&lt;code&gt;Troubleshooting&lt;/code&gt;部分&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;安装swift到系统&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;创建Ring Files&lt;/h3&gt;

&lt;p&gt;Ring File包含存储设备的所有信息 （each ring will contain 2&lt;sup&gt;12&lt;/sup&gt;=4096 partitions）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -pv /etc/swift
swift-ring-builder /etc/swift/account.builder create 12 3 1
swift-ring-builder /etc/swift/container.builder create 12 3 1
swift-ring-builder /etc/swift/object.builder create 12 3 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为每个Ring增加存储设备&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swift-ring-builder /etc/swift/account.builder add z1-127.0.0.1:6002/z1d1 100
swift-ring-builder /etc/swift/account.builder add z1-127.0.0.1:6002/z1d2 100
swift-ring-builder /etc/swift/account.builder add z2-127.0.0.1:6002/z2d1 100
swift-ring-builder /etc/swift/account.builder add z2-127.0.0.1:6002/z2d2 100
swift-ring-builder /etc/swift/account.builder add z3-127.0.0.1:6002/z3d1 100
swift-ring-builder /etc/swift/account.builder add z3-127.0.0.1:6002/z3d2 100

swift-ring-builder /etc/swift/container.builder add z1-127.0.0.1:6001/z1d1 100
swift-ring-builder /etc/swift/container.builder add z1-127.0.0.1:6001/z1d2 100
swift-ring-builder /etc/swift/container.builder add z2-127.0.0.1:6001/z2d1 100
swift-ring-builder /etc/swift/container.builder add z2-127.0.0.1:6001/z2d2 100
swift-ring-builder /etc/swift/container.builder add z3-127.0.0.1:6001/z3d1 100
swift-ring-builder /etc/swift/container.builder add z3-127.0.0.1:6001/z3d2 100

swift-ring-builder /etc/swift/object.builder add z1-127.0.0.1:6000/z1d1 100
swift-ring-builder /etc/swift/object.builder add z1-127.0.0.1:6000/z1d2 100
swift-ring-builder /etc/swift/object.builder add z2-127.0.0.1:6000/z2d1 100
swift-ring-builder /etc/swift/object.builder add z2-127.0.0.1:6000/z2d2 100
swift-ring-builder /etc/swift/object.builder add z3-127.0.0.1:6000/z3d1 100
swift-ring-builder /etc/swift/object.builder add z3-127.0.0.1:6000/z3d2 100
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To distribute the partitions across the drives in the ring&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swift-ring-builder /etc/swift/account.builder rebalance
swift-ring-builder /etc/swift/container.builder rebalance
swift-ring-builder /etc/swift/object.builder rebalance
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查文件是否生成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ls /etc/swift/*gz
/etc/swift/account.ring.gz  /etc/swift/container.ring.gz  /etc/swift/object.ring.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为swift创建HashKey (使用&lt;code&gt;openssl rand -hex 10&lt;/code&gt;生成随机串&lt;code&gt;0b1b9109c1ddde4f9c4b&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; /etc/swift/swift.conf &amp;lt;&amp;lt; EOF
[swift-hash]
swift_hash_path_suffix = 0b1b9109c1ddde4f9c4b
EOF

chmod 600 /etc/swift/swift.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置Swift Proxy&lt;/h3&gt;

&lt;p&gt;增加配置文件&lt;code&gt;/etc/swift/proxy-server.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tee /etc/swift/proxy-server.conf &amp;lt;&amp;lt;EOF
[DEFAULT]
bind_port = 8080
workers = 3
user = swift

[pipeline:main]
pipeline = healthcheck cache authtoken keystone proxy-server

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
account_autocreate = true

[filter:cache]
use = egg:swift#memcache
memcache_servers = 127.0.0.1:11211

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:keystone]
#paste.filter_factory = keystone.middleware.swift_auth:filter_factory
use = egg:swift#keystoneauth
operator_roles = admin, SwiftOperator
is_admin = true
cache = swift.cache

[filter:authtoken]
paste.filter_factory = keystone.middleware.auth_token:filter_factory
auth_host = 127.0.0.1
auth_port = 35357
auth_protocol = http
auth_uri = http://127.0.0.1:35357
# if its defined
admin_tenant_name = admin
admin_user = admin
admin_password = 123456
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groupadd swift
useradd -g swift swift
chown -R swift:swift /etc/swift/

LANG=en_US.utf8
service memcached start
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置Keystone&lt;/h3&gt;

&lt;p&gt;切换到管理员&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;. ~/keystonerc_admin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建用户、租户（admin角色前面已经创建）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone tenant-create --name services
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |                                  |
|   enabled   |               True               |
|      id     | 750f121b2087434e91393d554a5940d4 |
|     name    |             services             |
+-------------+----------------------------------+

keystone user-create --name swift --pass 789789
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|  email   |                                  |
| enabled  |               True               |
|    id    | e981e5f5a4244456b3a3cfdb52cd9707 |
|   name   |              swift               |
| tenantId |                                  |
+----------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将swift用户设置为admin角色和services租户成员&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone role-list
+----------------------------------+----------+
|                id                |   name   |
+----------------------------------+----------+
| 9fe2ff9ee4384b1894a90878d3e92bab | _member_ |
| de5cdd28a71f4df2943ac617ed20695c |  admin   |
| 430f055d142649d1b02e685025b07a5b |   user   |
+----------------------------------+----------+

keystone user-role-add --role de5cdd28a71f4df2943ac617ed20695c \
--tenant_id 750f121b2087434e91393d554a5940d4 \
--user e981e5f5a4244456b3a3cfdb52cd9707
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建service和endpoint&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone service-create --name swift --type object-store \
--description &quot;Swift Storage Service&quot;
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |      Swift Storage Service       |
|      id     | c09efaf486e54266b328cad0a52752c2 |
|     name    |              swift               |
|     type    |           object-store           |
+-------------+----------------------------------+

keystone endpoint-create --service_id c09efaf486e54266b328cad0a52752c2 \
--publicurl &quot;http://127.0.0.1:8080/v2/AUTH_\$(tenant_id)s&quot; \
--adminurl &quot;http://127.0.0.1:8080/v2/AUTH_\$(tenant_id)s&quot; \
--internalurl &quot;http://127.0.0.1:8080/v2/AUTH_\$(tenant_id)s&quot;
+-------------+---------------------------------------------+
|   Property  |                    Value                    |
+-------------+---------------------------------------------+
|   adminurl  | http://127.0.0.1:8080/v2/AUTH_$(tenant_id)s |
|      id     |       20f2279d7b2345c38f5315ac4518f1ea      |
| internalurl | http://127.0.0.1:8080/v2/AUTH_$(tenant_id)s |
|  publicurl  | http://127.0.0.1:8080/v2/AUTH_$(tenant_id)s |
|    region   |                  regionOne                  |
|  service_id |       c09efaf486e54266b328cad0a52752c2      |
+-------------+---------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看一下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone service-list
+----------------------------------+----------+--------------+---------------------------+
|                id                |   name   |     type     |        description        |
+----------------------------------+----------+--------------+---------------------------+
| 714af530900840ef88106765f13f1921 | keystone |   identity   | Keystone Identity Service |
| c09efaf486e54266b328cad0a52752c2 |  swift   | object-store |   Swift Storage Service   |
+----------------------------------+----------+--------------+---------------------------+

keystone endpoint-list
+----------------------------------+-----------+---------------------------------------------+---------------------------------------------+---------------------------------------------+----------------------------------+
|                id                |   region  |                  publicurl                  |                 internalurl                 |                   adminurl                  |            service_id            |
+----------------------------------+-----------+---------------------------------------------+---------------------------------------------+---------------------------------------------+----------------------------------+
| 20f2279d7b2345c38f5315ac4518f1ea | regionOne | http://127.0.0.1:8080/v2/AUTH_$(tenant_id)s | http://127.0.0.1:8080/v2/AUTH_$(tenant_id)s | http://127.0.0.1:8080/v2/AUTH_$(tenant_id)s | c09efaf486e54266b328cad0a52752c2 |
| d28d840d4be74a778578953a1a13324f | regionOne |          http://127.0.0.1:5000/v2.0         |          http://127.0.0.1:5000/v2.0         |         http://127.0.0.1:35357/v2.0         | 714af530900840ef88106765f13f1921 |
+----------------------------------+-----------+---------------------------------------------+---------------------------------------------+---------------------------------------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置Swift Storage Nodes&lt;/h3&gt;

&lt;p&gt;创建配置文件&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/swift/account-server.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tee /etc/swift/account-server.conf &amp;lt;&amp;lt;EOF
[DEFAULT]
devices = /srv/node
bind_ip = 127.0.0.1
bind_port = 6002
mount_check = false
user = swift
log_facility = LOG_LOCAL2
workers = 3

[pipeline:main]
pipeline = account-server

[app:account-server]
use = egg:swift#account

[account-replicator]
concurrency = 1

[account-auditor]

[account-reaper]
concurrency = 1
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/swift/container-server.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tee /etc/swift/container-server.conf &amp;lt;&amp;lt;EOF
[DEFAULT]
devices = /srv/node
bind_ip = 127.0.0.1
bind_port = 6001
mount_check = false
user = swift
log_facility = LOG_LOCAL2
workers = 3

[pipeline:main]
pipeline = container-server

[app:container-server]
use = egg:swift#container

[container-replicator]
concurrency = 1

[container-updater]
concurrency = 1

[container-auditor]

[container-sync]

EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/swift/object-server.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tee /etc/swift/object-server.conf &amp;lt;&amp;lt;EOF
[DEFAULT]
devices = /srv/node
bind_ip = 127.0.0.1
bind_port = 6000
mount_check = false
user = swift
log_facility = LOG_LOCAL2
workers = 3

[pipeline:main]
pipeline = object-server

[app:object-server]
use = egg:swift#object

[object-replicator]
concurrency = 1

[object-updater]
concurrency = 1

[object-auditor]

[object-expirer]
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/swift/object-expirer.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; /etc/swift/object-expirer.conf &amp;lt;&amp;lt; EOF
[DEFAULT]

[object-expirer]
interval = 300

[pipeline:main]
pipeline = catch_errors cache proxy-server

[app:proxy-server]
use = egg:swift#proxy

[filter:cache]
use = egg:swift#memcache

[filter:catch_errors]
use = egg:swift#catch_errors
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建和挂载loopback设备（注意：系统重启后挂载失效）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for zone in 1 2 3 ; do
    for device in 1 2 ; do
        truncate /var/tmp/swift-device-z${zone}d${device} --size 5G
        LOOPDEVICE=$(losetup --show -f /var/tmp/swift-device-z${zone}d${device})
        mkfs.ext4 -I 1024 $LOOPDEVICE
        mkdir -p /srv/node/z${zone}d${device}
        mount -o noatime,nodiratime,nobarrier,user_xattr $LOOPDEVICE \
        /srv/node/z${zone}d${device}
    done
done

chown -R swift:swift /srv/node /etc/swift
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动Swift&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swift-init all start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：启动时可能会报错&lt;code&gt;NameError: name &#39;_&#39; is not defined&lt;/code&gt;，解决方案见&lt;code&gt;Troubleshooting&lt;/code&gt;部分&lt;/p&gt;

&lt;h3&gt;测试Swift&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;. ~/keystonerc_admin

swift list

head -c 1024 /dev/urandom &amp;gt; data.file ; swift upload c1 data.file
head -c 1024 /dev/urandom &amp;gt; data2.file ; swift upload c1 data2.file
head -c 1024 /dev/urandom &amp;gt; data3.file ; swift upload c2 data3.file

$ swift list
c1
c2

$ swift list c1
data.file
data2.file

$ swift list c2
data3.file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;安装Glance&lt;/h2&gt;

&lt;p&gt;获取源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# commit e3328089ef8b99b6ecf66bb2e07aec59388d4afd
git clone git://github.com/openstack/glance.git

# commit cd11833cffa306516704e871fad23699e21339f3
git clone git://github.com/openstack/python-glanceclient.git 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd glance
pip install -r requirements.txt
python setup.py install

cd ../python-glanceclient
pip install -r requirements.txt
python setup.py install
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
create database glance;
quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;复制配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /etc/glance
cp glance/etc/* /etc/glance/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;/etc/glance/glance-api.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DEFAULT]
# default_store = file
default_store = swift

sql_connection = mysql://root:111111@127.0.0.1/glance

swift_store_auth_address = http://127.0.0.1:35357/v2.0/
swift_store_user = admin:admin
swift_store_key = 123456
swift_store_create_container_on_put = True

[keystone_authtoken]
admin_tenant_name = admin
admin_user = admin
admin_password = 123456

[paste_deploy]
flavor = keystone
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;/etc/glance/glance-registry.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DEFAULT]
#sql_connection = sqlite:///glance.sqlite
sql_connection = mysql://root:111111@127.0.0.1/glance

[keystone_authtoken]
admin_tenant_name = admin
admin_user = admin
admin_password = 123456

[paste_deploy]
flavor = keystone
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初始化数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/log/glance
glance-manage db_sync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建service和endpoint&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone service-create --name=glance --type=image --description=&quot;Glance Image Service&quot;
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |       Glance Image Service       |
|      id     | c9f6e93cfd384a27bdac595be296ad4a |
|     name    |              glance              |
|     type    |              image               |
+-------------+----------------------------------+  
keystone endpoint-create --service_id c9f6e93cfd384a27bdac595be296ad4a \
--publicurl http://localhost:9292/v1 \
--adminurl http://localhost:9292/v1 \
--internalurl http://localhost:9292/v1
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
|   adminurl  |     http://localhost:9292/v1     |
|      id     | c052904b25ac44c785c9ecb4cd53507e |
| internalurl |     http://localhost:9292/v1     |
|  publicurl  |     http://localhost:9292/v1     |
|    region   |            regionOne             |
|  service_id | c9f6e93cfd384a27bdac595be296ad4a |
+-------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;glance-api --config-file /etc/glance/glance-api.conf &amp;amp;
glance-registry --config-file /etc/glance/glance-registry.conf &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试一下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;. ~/keystonerc_admin

glance image-list
+----+------+-------------+------------------+------+--------+
| ID | Name | Disk Format | Container Format | Size | Status |
+----+------+-------------+------------------+------+--------+
+----+------+-------------+------------------+------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;增加image&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img
glance image-create --name=&quot;Cirros 0.3.0&quot; \
    --disk-format=qcow2 \
    --container-format bare &amp;lt; cirros-0.3.0-x86_64-disk.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看一下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ glance image-list
+--------------------------------------+--------------+-------------+------------------+----------+--------+
| ID                                   | Name         | Disk Format | Container Format | Size     | Status |
+--------------------------------------+--------------+-------------+------------------+----------+--------+
| 5ef6d78b-dd3e-4575-ad52-692552f3ddd3 | Cirros 0.3.0 | qcow2       | bare             | 13147648 | active |
+--------------------------------------+--------------+-------------+------------------+----------+--------+

$ swift list
c1
c2
glance

$ swift list glance
5ef6d78b-dd3e-4575-ad52-692552f3ddd3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;安装Cinder&lt;/h2&gt;

&lt;p&gt;获取源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# commit 3da3a0e827ff0e099514702d7116084245f03e80
git clone https://github.com/openstack/cinder.git

# commit 728a3419c9321f057b2a5e48b77281dc37487150
git clone https://github.com/openstack/python-cinderclient.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd cinder
pip install -r requirements.txt
python setup.py  install

cd ../python-cinderclient/
pip install -r requirements.txt
python setup.py  install
cd ..

apt-get install tgt open-iscsi rabbitmq-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -af cinder/etc/cinder /etc
cp /etc/cinder/cinder.conf.sample /etc/cinder/cinder.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;/etc/cinder/api-paste.ini&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[filter:authtoken]
admin_tenant_name = admin
admin_user = admin
admin_password = 123456
service_protocol = http
service_host = 127.0.0.1
service_port = 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;/etc/cinder/cinder.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DEFAULT]
rootwrap_config=/etc/cinder/rootwrap.conf
sql_connection=mysql://root:111111@127.0.0.1/cinder
api_paste_config=/etc/cinder/api-paste.ini

state_path=/var/lib/cinder
volumes_dir=$state_path/volumes

iscsi_helper=tgtadm
volume_name_template=volume-%s
volume_group=cinder-volumes
verbose=true
auth_strategy=keystone

log_file=cinder.log
log_dir=/var/log/cinder

rabbit_host=localhost
rabbit_port=5672
rabbit_userid=guest
rabbit_password=321321
rabbit_virtual_host=/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建cinder数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
create database cinder;
quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置RabbitMQ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rabbitmqctl change_password guest 321321
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置TGT&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/lib/cinder/volumes
sh -c &quot;echo &#39;include /var/lib/cinder/volumes/*&#39; &amp;gt;&amp;gt; /etc/tgt/conf.d/cinder.conf&quot;

restart tgt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初始化数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/log/cinder
cinder-manage db sync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建卷&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dd if=/dev/zero of=~/cinder-volumes bs=1 count=0 seek=2G
losetup /dev/loop6 ~/cinder-volumes
pvcreate /dev/loop6
vgcreate cinder-volumes /dev/loop6

$ pvscan
PV /dev/sda5    VG precise64        lvm2 [79.76 GiB / 0    free]
PV /dev/loop6   VG cinder-volumes   lvm2 [2.00 GiB / 2.00 GiB free]
Total: 2 [81.75 GiB] / in use: 2 [81.75 GiB] / in no VG: 0 [0   ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cinder-volume --config-file=/etc/cinder/cinder.conf &amp;amp;
cinder-api --config-file=/etc/cinder/cinder.conf &amp;amp;
cinder-scheduler --config-file=/etc/cinder/cinder.conf &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建&lt;code&gt;service&lt;/code&gt;和&lt;code&gt;endpoint&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone service-create --name=volume --type=volume --description=&quot;Nova Volume Service&quot;
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |      Nova Volume Service         |
|      id     | 0f66c20499ca4f77990e286a3607e5aa |
|     name    |              volume              |
|     type    |              volume              |
+-------------+----------------------------------+

keystone endpoint-create --service_id=0f66c20499ca4f77990e286a3607e5aa \
                    --publicurl &quot;http://localhost:8776/v1/\$(tenant_id)s&quot; \
                    --adminurl &quot;http://localhost:8776/v1/\$(tenant_id)s&quot; \
                    --internalurl &quot;http://localhost:8776/v1/\$(tenant_id)s&quot;
+-------------+----------------------------------------+
|   Property  |                 Value                  |
+-------------+----------------------------------------+
|   adminurl  | http://localhost:8776/v1/$(tenant_id)s |
|      id     |    a62cb598466f411bb8f6381495994690    |
| internalurl | http://localhost:8776/v1/$(tenant_id)s |
|  publicurl  | http://localhost:8776/v1/$(tenant_id)s |
|    region   |               regionOne                |
|  service_id |    0f66c20499ca4f77990e286a3607e5aa    |
+-------------+----------------------------------------+

keystone endpoint-list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建1G的volume测试一下（取名：test）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cinder list
+----+--------+--------------+------+-------------+----------+-------------+
| ID | Status | Display Name | Size | Volume Type | Bootable | Attached to |
+----+--------+--------------+------+-------------+----------+-------------+
+----+--------+--------------+------+-------------+----------+-------------+

cinder create --display_name test 1
+---------------------+--------------------------------------+
|       Property      |                Value                 |
+---------------------+--------------------------------------+
|     attachments     |                  []                  |
|  availability_zone  |                 nova                 |
|       bootable      |                False                 |
|      created_at     |      2013-09-23T13:08:54.358719      |
| display_description |                 None                 |
|     display_name    |                 test                 |
|          id         | 7e7a503c-0f47-4a74-88a6-e4fd84a9592b |
|       metadata      |                  {}                  |
|         size        |                  1                   |
|     snapshot_id     |                 None                 |
|     source_volid    |                 None                 |
|        status       |               creating               |
|     volume_type     |                 None                 |
+---------------------+--------------------------------------+

cinder list
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
|                  ID                  |   Status  | Display Name | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
| 7e7a503c-0f47-4a74-88a6-e4fd84a9592b | available |     test     |  1   |     None    |  False   |             |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;安装Nova&lt;/h2&gt;

&lt;p&gt;获取源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# commit e0b5bde35a54c6855da3639582edc68afa43d5ee
git clone git://github.com/openstack/nova.git

# commit 516586a6b8f48a912d9b3d090f2d0a95a267feb2
git clone https://github.com/openstack/python-novaclient.git

# commit 142aa4583cd0ffa11e8ebc19a52f024f1ff1b235
git clone https://github.com/kanaka/noVNC.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd nova
pip install -r requirements.txt
python setup.py  install
cd ..

cd python-novaclient
pip install -r requirements.txt
python setup.py  install
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装依赖&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install python-libvirt guestmount bridge-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -af  nova/etc/nova /etc
cp /etc/nova/nova.conf.sample /etc/nova/nova.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置数据库&lt;/h3&gt;

&lt;p&gt;创建nova的数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
create database nova;
quit
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置Nova&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;/etc/nova/nova.conf&lt;/code&gt; 全部配置如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# LOGS/STATE
verbose=True
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
rootwrap_config=/etc/nova/rootwrap.conf

# SCHEDULER
compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler

# VOLUMES
volume_api_class=nova.volume.cinder.API
volume_driver=nova.volume.driver.ISCSIDriver
volume_group=cinder-volumes
volume_name_template=volume-%s
iscsi_helper=tgtadm

# DATABASE
sql_connection=mysql://root:111111@127.0.0.1/nova

# COMPUTE
libvirt_type=qemu
compute_driver=libvirt.LibvirtDriver
instance_name_template=instance-%08x
api_paste_config=/etc/nova/api-paste.ini

# COMPUTE/APIS: if you have separate configs for separate services
# this flag is required for both nova-api and nova-compute
#allow_resize_to_same_host=True

# APIS
osapi_compute_extension=nova.api.openstack.compute.contrib.standard_extensions
ec2_dmz_host=127.0.0.1
s3_host=127.0.0.1
enabled_apis=ec2,osapi_compute,metadata

# RABBITMQ
rabbit_host=localhost
rabbit_port=5672
rabbit_userid=guest
rabbit_password=321321
rabbit_virtual_host=/

# GLANCE
image_service=nova.image.glance.GlanceImageService
glance_api_servers=127.0.0.1:9292

# NETWORK
network_manager=nova.network.manager.FlatDHCPManager
force_dhcp_release=True
dhcpbridge_flagfile=/etc/nova/nova.conf
firewall_driver=nova.virt.libvirt.firewall.IptablesFirewallDriver
# Change my_ip to match each host
my_ip=127.0.0.1
public_interface=eth0
vlan_interface=eth0
flat_network_bridge=br100
flat_interface=eth0
fixed_range=192.168.100.0/24
use_ipv6=false

# NOVNC CONSOLE
novncproxy_base_url=http://127.0.0.1:6080/vnc_auto.html
# Change vncserver_proxyclient_address and vncserver_listen to match each compute host
vncserver_proxyclient_address=127.0.0.1
vncserver_listen=127.0.0.1

# AUTHENTICATION
auth_strategy=keystone
[keystone_authtoken]
auth_host = 127.0.0.1
auth_port = 35357
auth_protocol = http
admin_tenant_name = admin
admin_user = admin
admin_password = admin
signing_dirname = /tmp/keystone-signing-nova
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;/etc/nova/api-paste.ini&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[filter:authtoken]
admin_tenant_name = admin
admin_user = admin
admin_password = 123456
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建相应目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/log/nova
mkdir -p /var/lib/nova/instances
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;初始化数据库&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;nova-manage db sync
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;启动服务&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# controller node
nova-api
nova-conductor
nova-network
nova-scheduler
noVNC/utils/nova-novncproxy --config-file /etc/nova/nova.conf --web `pwd`/noVNC/

# compute node
nova-compute
#nova-network
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;创建Endpoint&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;keystone service-create --name=nova --type=compute --description=&quot;Nova Compute Service&quot;
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |       Nova Compute Service       |
|      id     | e8f13ca5e3de451887059358cce1071a |
|     name    |               nova               |
|     type    |             compute              |
+-------------+----------------------------------+

keystone endpoint-create \
    --service-id=e8f13ca5e3de451887059358cce1071a \
    --publicurl=&#39;http://localhost:8774/v2/%(tenant_id)s&#39; \
    --internalurl=&#39;http://localhost:8774/v2/%(tenant_id)s&#39; \
    --adminurl=&#39;http://localhost:8774/v2/%(tenant_id)s&#39;
+-------------+----------------------------------------+
|   Property  |                 Value                  |
+-------------+----------------------------------------+
|   adminurl  | http://localhost:8774/v2/%(tenant_id)s |
|      id     |    30c72b9d0d794fa79201bbdd2aa10fa8    |
| internalurl | http://localhost:8774/v2/%(tenant_id)s |
|  publicurl  | http://localhost:8774/v2/%(tenant_id)s |
|    region   |               regionOne                |
|  service_id |    e8f13ca5e3de451887059358cce1071a    |
+-------------+----------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;验证一下&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ nova-manage service list
Binary           Host                                 Zone             Status     State Updated_At
nova-conductor   precise64                            internal         enabled    :-)   2013-10-17 15:52:40
nova-network     precise64                            internal         enabled    :-)   2013-10-17 15:52:47
nova-scheduler   precise64                            internal         enabled    :-)   2013-10-17 15:52:43
nova-compute     precise64                            nova             enabled    :-)   2013-10-17 15:52:49

$ nova-manage version
2014.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nova image-list&lt;/code&gt;输出结果应该和&lt;code&gt;glance image-list&lt;/code&gt;相同&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nova image-list
+--------------------------------------+------------+--------+--------+
| ID                                   | Name       | Status | Server |
+--------------------------------------+------------+--------+--------+
| 1a736b75-3e49-4fed-97f1-f3257a75b3b8 | test image | ACTIVE |        |
+--------------------------------------+------------+--------+--------+

$ glance image-list
+--------------------------------------+------------+-------------+------------------+------+--------+
| ID                                   | Name       | Disk Format | Container Format | Size | Status |
+--------------------------------------+------------+-------------+------------------+------+--------+
| 1a736b75-3e49-4fed-97f1-f3257a75b3b8 | test image | aki         | aki              | 1024 | active |
+--------------------------------------+------------+-------------+------------------+------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置网络&lt;/h3&gt;

&lt;p&gt;将网卡设为&lt;code&gt;promiscuous mode&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip link set eth0 promisc on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改网卡配置&lt;code&gt;/etc/network/interfaces&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp

# Bridge network interface for VM networks
auto br100
iface br100 inet static
address 192.168.100.1
netmask 255.255.255.0
bridge_stp off
bridge_fd 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;增加桥接设备（取名&lt;code&gt;br100&lt;/code&gt;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brctl addbr br100
/etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查一下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig
    br100     Link encap:Ethernet  HWaddr 36:31:ff:07:28:7b
              inet addr:192.168.100.1  Bcast:192.168.100.255  Mask:255.255.255.0
              inet6 addr: fe80::3431:ffff:fe07:287b/64 Scope:Link
              UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
              RX packets:0 errors:0 dropped:0 overruns:0 frame:0
              TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:0
              RX bytes:0 (0.0 B)  TX bytes:706 (706.0 B)

    eth0      Link encap:Ethernet  HWaddr 08:00:27:88:0c:a6
              inet addr:10.0.2.15  Bcast:10.0.2.255  Mask:255.255.255.0
              inet6 addr: fe80::a00:27ff:fe88:ca6/64 Scope:Link
              UP BROADCAST RUNNING PROMISC MULTICAST  MTU:1500  Metric:1
              RX packets:677269 errors:0 dropped:0 overruns:0 frame:0
              TX packets:361734 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:1000
              RX bytes:524297575 (524.2 MB)  TX bytes:25305754 (25.3 MB)

    lo        Link encap:Local Loopback
              inet addr:127.0.0.1  Mask:255.0.0.0
              inet6 addr: ::1/128 Scope:Host
              UP LOOPBACK RUNNING  MTU:16436  Metric:1
              RX packets:270140 errors:0 dropped:0 overruns:0 frame:0
              TX packets:270140 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:0
              RX bytes:105663149 (105.6 MB)  TX bytes:105663149 (105.6 MB)

    virbr0    Link encap:Ethernet  HWaddr 32:d5:7b:ce:e5:b0
              inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0
              UP BROADCAST MULTICAST  MTU:1500  Metric:1
              RX packets:0 errors:0 dropped:0 overruns:0 frame:0
              TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
              collisions:0 txqueuelen:0
              RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;创建虚机使用的网络&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;nova-manage network create private --fixed_range_v4=192.168.100.0/24 --bridge_interface=br100
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;打开访问限制&lt;/h3&gt;

&lt;p&gt;查看安全分组&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nova secgroup-list
+----+---------+-------------+
| Id | Name    | Description |
+----+---------+-------------+
| 1  | default | default     |
+----+---------+-------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;放开SSH和ICMP（Ping）访问&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nova secgroup-add-rule default tcp 22 22 0.0.0.0/0
$ nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0
$ nova secgroup-list-rules
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;配置22端口后&lt;code&gt;vagrant ssh&lt;/code&gt;可能无法访问，可使用VirtualBox的界面登录
然后可以根据需要安装图形界面，比如xfce: &lt;code&gt;apt-get install xubuntu-desktop; startx&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;注入SSH公钥到虚机并确认（需要虚机Image支持）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa       # 一路回车
$ nova keypair-add --pub-key ~/.ssh/id_rsa.pub mykey

$ nova keypair-list
$ ssh-keygen -l -f ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;打开&lt;code&gt;ip_v4&lt;/code&gt;转发&lt;/h3&gt;

&lt;p&gt;先看看是否已经打开&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时开启&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sysctl -w net.ipv4.ip_forward=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;永久开启，先编辑&lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;net.ipv4.ip_forward = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再重启服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/procps restart  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;运行虚机实例&lt;/h3&gt;

&lt;p&gt;先确认所有服务都在运行(&lt;code&gt;libvirtd&lt;/code&gt;,&lt;code&gt;nova-api&lt;/code&gt;,&lt;code&gt;nova-scheduler&lt;/code&gt;,&lt;code&gt;nova-compute&lt;/code&gt;,&lt;code&gt;nova-network&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ps -ef | grep libvirt
root     19970     1  0 14:04 ?        00:00:05 /usr/sbin/libvirtd -d

$ nova-manage service list
Binary           Host                                 Zone             Status     State Updated_At
nova-conductor   precise64                            internal         enabled    :-)   2013-10-17 15:52:40
nova-network     precise64                            internal         enabled    :-)   2013-10-17 15:52:47
nova-scheduler   precise64                            internal         enabled    :-)   2013-10-17 15:52:43
nova-compute     precise64                            nova             enabled    :-)   2013-10-17 15:52:49
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动实例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nova secgroup-list
+----+---------+-------------+
| Id | Name    | Description |
+----+---------+-------------+
| 1  | default | default     |
+----+---------+-------------+

$ nova flavor-list 
+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+
| ID | Name      | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public |
+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+
| 1  | m1.tiny   | 512       | 1    | 0         |      | 1     | 1.0         | True      |
| 2  | m1.small  | 2048      | 20   | 0         |      | 1     | 1.0         | True      |
| 3  | m1.medium | 4096      | 40   | 0         |      | 2     | 1.0         | True      |
| 4  | m1.large  | 8192      | 80   | 0         |      | 4     | 1.0         | True      |
| 5  | m1.xlarge | 16384     | 160  | 0         |      | 8     | 1.0         | True      |
+----+-----------+-----------+------+-----------+------+-------+-------------+-----------+

$ nova image-list
+--------------------------------------+--------------+--------+--------+
| ID                                   | Name         | Status | Server |
+--------------------------------------+--------------+--------+--------+
| 5ef6d78b-dd3e-4575-ad52-692552f3ddd3 | Cirros 0.3.0 | ACTIVE |        |
+--------------------------------------+--------------+--------+--------+

$ nova boot --flavor 1 --image 5ef6d78b-dd3e-4575-ad52-692552f3ddd3 --security_group default cirros
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看实例状态(启动需要一些时间)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nova list 
+--------------------------------------+--------+--------+------------+-------------+-----------------------+
| ID                                   | Name   | Status | Task State | Power State | Networks              |
+--------------------------------------+--------+--------+------------+-------------+-----------------------+
| 2c0c5c9b-2511-4616-8186-3843b0800da1 | cirros | BUILD  | spawning   | NOSTATE     | private=192.168.100.2 |
+--------------------------------------+--------+--------+------------+-------------+-----------------------+

$ nova list 
+--------------------------------------+--------+--------+------------+-------------+-----------------------+
| ID                                   | Name   | Status | Task State | Power State | Networks              |
+--------------------------------------+--------+--------+------------+-------------+-----------------------+
| 2c0c5c9b-2511-4616-8186-3843b0800da1 | cirros | ACTIVE | None       | Running     | private=192.168.100.2 |
+--------------------------------------+--------+--------+------------+-------------+-----------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看引导信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nova console-log cirros
...
Oct 17 10:02:00 cirros kern.info kernel: [    6.980753] ip_tables: (C) 2000-2006 Netfilter Core Team
Oct 17 10:02:13 cirros kern.debug kernel: [   19.977012] eth0: no IPv6 routers present
Oct 17 10:03:29 cirros authpriv.info dropbear[301]: Running in background
############ debug end   ##############
  ____               ____  ____
 / __/ __ ____ ____ / __ \/ __/
/ /__ / // __// __// /_/ /\ \ 
\___//_//_/  /_/   \____/___/ 
   http://cirros-cloud.net


login as &#39;cirros&#39; user. default password: &#39;cubswin:)&#39;. use &#39;sudo&#39; for root.
cirros login: 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;虚机应该可以Ping通，然后SSH登陆（密码：&lt;code&gt;cubswin:)&lt;/code&gt;），从虚机可以Ping通公网IP&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh cirros@192.168.100.2
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;并非每次都能Ping通，可以不停的删除后再重建，有时Ping通后过会儿又不行了，尚不清楚原因&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;如果要删除虚机，执行（貌似需要执行两次，第一次修改状态，第二次移除）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nova delete 2c0c5c9b-2511-4616-8186-3843b0800da1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;安装Horizon&lt;/h2&gt;

&lt;p&gt;获取源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# commit 1f7d703730d62c5e3896661a76a9808ec765ae1a
git clone https://github.com/openstack/horizon.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd horizon
pip install -r requirements.txt
python setup.py install
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd horizon/openstack_dashboard/local
cp local_settings.py.example local_settings.py
cd -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改配置&lt;code&gt;local_settings.py&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;OPENSTACK_HOST = &quot;127.0.0.1&quot;
OPENSTACK_KEYSTONE_DEFAULT_ROLE = &quot;admin&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd horizon
./manage.py runserver 0.0.0.0:8888
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;随便找个未被占用的端口即可&lt;/p&gt;

&lt;p&gt;如果使用Vagrant，到Virtualbox的网络设置中加个端口映射即可从Host访问&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;创建一个默认角色&lt;code&gt;Member&lt;/code&gt;（否则“项目”页面的操作会报错）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone role-create --name Member
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Troubleshooting&lt;/h1&gt;

&lt;h2&gt;Expecting an auth URL via either --os-auth-url or env[OS_AUTH_URL]&lt;/h2&gt;

&lt;p&gt;缺少环境变量，使用&lt;code&gt;admin_token&lt;/code&gt;验证方式设置如下（&lt;code&gt;SERVICE_TOKEN&lt;/code&gt;的值取自&lt;code&gt;/etc/keystone/keystone.conf&lt;/code&gt;的&lt;code&gt;admin_token&lt;/code&gt;字段）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export SERVICE_TOKEN=ADMIN
export SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者创建用户的环境变量快速设置脚本，并运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; ~/keystonerc_joe &amp;lt;&amp;lt; EOF
export OS_USERNAME=joe
export OS_TENANT_NAME=trial
export OS_PASSWORD=123123
export OS_AUTH_URL=http://127.0.0.1:5000/v2.0/
export PS1=&quot;[\u@\h \W(keystone_joe)]\$ &quot;
EOF

. ~/keystonerc_joe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：管理员端口为&lt;code&gt;35357&lt;/code&gt;，普通用户是&lt;code&gt;5000&lt;/code&gt;，参考&lt;code&gt;/etc/keystone/keystone.conf&lt;/code&gt;的配置&lt;/p&gt;

&lt;h2&gt;Unable to authorize user&lt;/h2&gt;

&lt;p&gt;可能是数据库中不存在&lt;code&gt;identity&lt;/code&gt;这个&lt;code&gt;endpoint&lt;/code&gt;, 且&lt;code&gt;/etc/keystone/keystone.conf&lt;/code&gt;又配置为从数据读取&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[catalog]
driver = keystone.catalog.backends.sql.Catalog
# driver = keystone.catalog.backends.templated.TemplatedCatalog
# template_file = default_catalog.templates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可配置为从模板读取&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[catalog]
# driver = keystone.catalog.backends.sql.Catalog
driver = keystone.catalog.backends.templated.TemplatedCatalog
template_file = default_catalog.templates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果一定要从数据库读取，先增加&lt;code&gt;admin_token&lt;/code&gt;方式验证的环境变量，然后手动增加endpoint信息，可参考&lt;code&gt;/etc/keystone/default_catalog.templates&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;[swift, pip install -r reuqirements.txt] ERROR： &quot;c/_cffi_backend.c:14:17: fatal error: ffi.h: No such file or directory&quot;&lt;/h2&gt;

&lt;p&gt;注释掉&lt;code&gt;requirements.txt&lt;/code&gt;中的&lt;code&gt;xattr&lt;/code&gt;,安装完依赖后自己手动安装&lt;code&gt;python-xattr&lt;/code&gt;包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt
apt-get install python-xattr
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[swift-init all start] ERROR: &quot;NameError: name &#39;_&#39; is not defined&quot;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/usr/local/lib/python2.7/dist-packages/keystone/exception.py&lt;/code&gt; 增加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import gettext
_ = gettext.gettext
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;No module named swift_auth&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/swift/proxy-server.conf&lt;/code&gt; 修改：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[filter:keystone]
# paste.filter_factory = keystone.middleware.swift_auth:filter_factory
use = egg:swift#keystoneauth
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[swift list] Endpoint for object-store not found&lt;/h2&gt;

&lt;p&gt;如果&lt;code&gt;/etc/keystone/proxy-server.conf&lt;/code&gt;配置为从模版读取,那么必须手动添加&lt;code&gt;endpoint&lt;/code&gt;到模版，数据库创建语句无效。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[catalog]
# dynamic, sql-based backend (supports API/CLI-based management commands)
#driver = keystone.catalog.backends.sql.Catalog

# static, file-based backend (does *NOT* support any management commands)
driver = keystone.catalog.backends.templated.TemplatedCatalog

template_file = default_catalog.templates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/etc/keystone/default_catalog.templates&lt;/code&gt; 增加:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;catalog.RegionOne.object-store.publicURL = http://localhost:8080/v1/AUTH_$(tenant_id)s
catalog.RegionOne.object-store.adminURL = http://localhost:8080/v1/AUTH_$(tenant_id)s
catalog.RegionOne.object-store.internalURL = http://localhost:8080/v1/AUTH_$(tenant_id)s
catalog.RegionOne.object-store.name = Object Store Service
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[swift-init all start] Unable to locate config for object-expirer&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/swift/object-server.conf&lt;/code&gt; 增加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[object-expirer]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建&lt;code&gt;/etc/swift/object-expirer.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; /etc/swift/object-expirer.conf &amp;lt;&amp;lt; EOF
[DEFAULT]

[object-expirer]
interval = 300

[pipeline:main]
pipeline = catch_errors cache proxy-server

[app:proxy-server]
use = egg:swift#proxy

[filter:cache]
use = egg:swift#memcache

[filter:catch_errors]
use = egg:swift#catch_errors
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown -R swift:swift /etc/swift
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[swift-init all start] Unable to locate config for proxy-server&lt;/h2&gt;

&lt;p&gt;缺少&lt;code&gt;/etc/swift/proxy-server.conf&lt;/code&gt;文件&lt;/p&gt;

&lt;h2&gt;[Log] No such file or directory: &#39;/var/cache/swift/object.recon&#39;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;proxy-server.conf&lt;/code&gt;增加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift

mkdir /var/cache/swift
chmod 777 /var/cache/swift
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[glance-control api start] __init__() got an unexpected keyword argument &#39;parents&#39;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;pip freeze | grep oslo
# oslo.config==1.2.0a3

pip uninstall oslo.config
pip install oslo.config==1.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;没有glance命令&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;glance&lt;/code&gt;命令在包&lt;code&gt;glanceclient&lt;/code&gt;中，该包是独立的，可以直接用&lt;code&gt;pip&lt;/code&gt;快速安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install python-glanceclient
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[glance add] Authorization Failed: *** (HTTP Unable to establish connection to http://127.0.0.1:35357/v2.0/tokens)&lt;/h2&gt;

&lt;p&gt;确认keystone服务是否启动&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ps -Af | grep keystone
keystone-all &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[glance add] Authorization Failed: *** (HTTP Unable to establish connection to https://127.0.0.1:35357/v2.0/tokens)&lt;/h2&gt;

&lt;p&gt;注意，这里的报错是&lt;code&gt;https&lt;/code&gt;，检查配置文件&lt;code&gt;/etc/glance/glance-api.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Valid schemes are &#39;http://&#39; and &#39;https://&#39;
# If no scheme specified,  default to &#39;https://&#39;
swift_store_auth_address = http://127.0.0.1:35357/v2.0/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意注释部分，如果没有&lt;code&gt;http://&lt;/code&gt;则默认使用&lt;code&gt;https://&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;[glance add] code 400, message Bad HTTP/0.9 request type&lt;/h2&gt;

&lt;p&gt;启动命令换成如下，可看到日志错误提示信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;glance-api --config-file /etc/glance/glance-api.conf
glance-registry --config-file /etc/glance/glance-registry.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[swift upload] 404 Not Found. The resource could not be found.&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;chown -R swift:swift /srv/node&lt;/code&gt;  (目录写权限问题)&lt;/p&gt;

&lt;h2&gt;[glance index] WARNING keystone.common.controller [-] RBAC: Bypassing authorization&lt;/h2&gt;

&lt;p&gt;可能是用admin验证引起的（启动方式&lt;code&gt;glance-control api/registry start&lt;/code&gt;）&lt;/p&gt;

&lt;p&gt;也可能是启动方式问题，使用&lt;code&gt;glance-api&lt;/code&gt;和&lt;code&gt;glance-registry&lt;/code&gt;启动后消失&lt;/p&gt;

&lt;h2&gt;[glance add, /var/log/glance/api.log] Container HEAD failed: http://localhost:8080/v1/AUTH_9cb8bbc75bdb4484af790cfc3e4343e5/glance 404 Not Found&lt;/h2&gt;

&lt;p&gt;swift中没有&lt;code&gt;glance&lt;/code&gt;这个container，可以手动创建，也可以修改配置&lt;code&gt;/etc/glance/glance-api.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swift_store_container = glance

# Do we create the container if it does not exist?
swift_store_create_container_on_put = True
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[glance-api --config-file /etc/glance/glance-api.conf] Stderr: &#39;/bin/sh: 1: collie: not found\n&#39;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get install sheepdog
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[glance add] ClientException: Unauthorised. Check username, password and tenant name/id&lt;/h2&gt;

&lt;p&gt;账户设置有问题，可以检查配置&lt;code&gt;/etc/glance/glance-api.conf&lt;/code&gt;，也可以在报错文件的语句前插入打印语句查看&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swift_store_auth_address = http://127.0.0.1:35357/v2.0/
swift_store_user = admin:admin
swift_store_key = 123456
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[glance image-list] HTTPInternalServerError (HTTP 500)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;确认安装&lt;code&gt;curl&lt;/code&gt;。加上&lt;code&gt;-d&lt;/code&gt;参数，可看到执行了&lt;code&gt;curl&lt;/code&gt;命令，手动执行后报错&lt;code&gt;The program &#39;curl&#39; is currently not installed.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确认&lt;code&gt;glance db_sync&lt;/code&gt;执行成功。查看数据库&lt;code&gt;glance&lt;/code&gt;，发现没有表，检查&lt;code&gt;glance-*.conf&lt;/code&gt;的&lt;code&gt;sql-connection&lt;/code&gt;配置&lt;/li&gt;
&lt;li&gt;确认&lt;code&gt;glance-api.conf&lt;/code&gt;文件中的&lt;code&gt;swift_store_auth_address = http://127.0.0.1:35357/v2.0/&lt;/code&gt;是&lt;code&gt;http&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;[nova, pvcreate /dev/loop2] Device /dev/loop2 not found (or ignored by filtering)&lt;/h2&gt;

&lt;p&gt;可能是修改了&lt;code&gt;/etc/lvm/lvm.conf&lt;/code&gt;中的&lt;code&gt;filter&lt;/code&gt;造成的&lt;/p&gt;

&lt;h2&gt;[cinder create] ERROR cinder.scheduler.filters.capacity_filter [***] Free capacity not set: volume node info collection broken.&lt;/h2&gt;

&lt;h2&gt;[cinder create] ERROR cinder.volume.flows.create_volume [***] Failed to schedule_create_volume: No valid host was found.&lt;/h2&gt;

&lt;p&gt;使用&lt;code&gt;cinder-all&lt;/code&gt;启动所有服务，然后&lt;code&gt;cinder create&lt;/code&gt;时会就遇到这个报错；&lt;/p&gt;

&lt;p&gt;使用如下启动方式时正常：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cinder-volume --config-file=/etc/cinder/cinder.conf
cinder-api --config-file=/etc/cinder/cinder.conf
cinder-scheduler  --config-file=/etc/cinder/cinder.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[cinder list] &lt;code&gt;Status&lt;/code&gt;一直都是&lt;code&gt;creating&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cinder list
+--------------------------------------+----------+--------------+------+-------------+----------+-------------+
|                  ID                  |  Status  | Display Name | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+----------+--------------+------+-------------+----------+-------------+
| fbda9189-26e2-4e42-9622-f707be57d565 | creating |     test     |  1   |     None    |  False   |             |
+--------------------------------------+----------+--------------+------+-------------+----------+-------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首先确定数据库&lt;code&gt;cinder&lt;/code&gt;中是否有表，即确保&lt;code&gt;cinder-manage db sync&lt;/code&gt;执行成功&lt;/p&gt;

&lt;h2&gt;[cinder create] &lt;code&gt;Status&lt;/code&gt;是&lt;code&gt;error&lt;/code&gt;，&lt;code&gt;cinder-volume&lt;/code&gt;报错：&lt;code&gt;Exit code: 5&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;确定配置文件&lt;code&gt;/etc/cinder/cinder.conf&lt;/code&gt;包含如下内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;state_path=/var/lib/cinder
volumes_dir=$state_path/volumes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[cinder-volume] AMQP server on localhost:5672 is unreachable&lt;/h2&gt;

&lt;p&gt;在不使用nova的情况下，确认&lt;code&gt;/etc/cinder/cinder.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rabbit_virtual_host=/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[nova-compute] ImportError: No module named libvirt&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get install python-libvirt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[nova-api] Address already in use&lt;/h2&gt;

&lt;p&gt;先确定是否已经有&lt;code&gt;nova-api&lt;/code&gt;进程在运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ps -ef | grep nova
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没有，杀掉占用&lt;code&gt;8777&lt;/code&gt;的进程&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;netstat -apn | grep 8777
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[nova image-list] ERROR: printt&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;novaclient&lt;/code&gt;代码有bug，修改&lt;code&gt;/usr/lib/python2.7/dist-packages/novaclient/utils.py&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def print_list(objs, fields, formatters={}):
    //此处省略N行
    print pt.get_string(sortby=fields[0])
    #pt.printt(sortby=fields[0])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装&lt;code&gt;novnc&lt;/code&gt;会作为依赖安装&lt;code&gt;novaclient&lt;/code&gt;包，如果比较早的版本可能会有问题，用如下方式安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get download novnc
dpkg --force-all -i novnc_*.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[nova image-list] ERROR: Unauthorized (HTTP 401)&lt;/h2&gt;

&lt;p&gt;修改&lt;code&gt;/etc/nova/api-paste.ini&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[filter:authtoken]
admin_tenant_name = admin
admin_user = admin
admin_password = 123456
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[nova net-list] ERROR: HTTPConnectionPool(host=&#39;10.0.2.15&#39;, port=8774): Max retries exceeded with url: /v2/dd3d73c9f6e64acca28376d9bad0fc58/os-tenant-networks (Caused by &lt;class &#39;socket.error&#39;&gt;: [Errno 111] Connection refused)&lt;/h2&gt;

&lt;p&gt;使用&lt;code&gt;devstack&lt;/code&gt;在虚拟机安装后，执行&lt;code&gt;nova net-list&lt;/code&gt;报错，执行&lt;code&gt;netstat&lt;/code&gt;查看&lt;code&gt;8774&lt;/code&gt;端口没有被监听，然后发现&lt;code&gt;nova-api&lt;/code&gt;没有起来，手动启动后报错&lt;code&gt;OSError: [Errno 12] Cannot allocate memory&lt;/code&gt;，当前虚拟及内存只分配了1G，扩大到2G后正常。&lt;/p&gt;

&lt;h2&gt;[nova-compute] libvirtError: internal error Cannot find suitable emulator for x86_64&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get install guestmount
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;[Ping] 虚机Ping不通&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;确认打开SSH和ICMP访问限制&lt;/li&gt;
&lt;li&gt;确认打开ip_v4转发&lt;/li&gt;
&lt;li&gt;确认&lt;code&gt;nova.conf&lt;/code&gt;配置&lt;code&gt;use_ipv6=false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参考链接：&lt;a href=&quot;https://ask.openstack.org/en/question/120/cantt-ping-my-vm-from-controller-node/&quot;&gt;https://ask.openstack.org/en/question/120/cantt-ping-my-vm-from-controller-node/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;[创建项目] NotFound: ***&quot;Member&quot;&lt;/h2&gt;

&lt;p&gt;Horizon的“项目”页面点击“创建项目”按钮报错，因为缺少默认角色&lt;code&gt;Member&lt;/code&gt;，创建即可&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keystone role-create --name Member
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 
</feed>